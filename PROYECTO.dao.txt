/////////////////////////ConexionBD   ///////////////////////////

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PROYECTO.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author jamon
 */
public class ConexionBD {
        protected Connection conn;
    protected void cerrar(PreparedStatement stm)throws Exception{
        stm.close();
    }
    protected void cerrar(ResultSet rst)throws Exception{
        rst.close();
    }
    public ConexionBD() {
        String driver="org.gjt.mm.mysql.Driver";
        String user="root";
        String pwd="";
        String bd="proyecto01";
        String server="jdbc:mysql://localhost/"+bd;
        try {
            Class.forName(driver);
            conn=DriverManager.getConnection(server,user,pwd);
        } catch (SQLException e) {
            System.out.println(e);
        } catch (ClassNotFoundException e) {
            System.out.println(e);
        }
    }
}

/////////////////////////  celularDAO  //////////////////////////

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PROYECTO.dao;
import PROYECTO.dt.celularDT;
import PROYECTO.dt.clienteDT;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author jamon
 */
public class celularDAO extends ConexionBD{    
    private final static String insert="insert into celular(idcelular, idnumEmpleado, idcliente, nombre, sisoperativo, marca, memoria, precio, compañia, color, cantidadcamaras, pulgadas, fechaventa, pixeles)values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
    private final static String update="update celular set idnumEmpleado=?, idcliente=?, nombre=?, sisoperativo=?, marca=?, memoria=?, precio=?, compañia=?, color=?, cantidadcamaras=?, pulgadas=?, fechaVenta=?, pixeles=? where idcelular=?";
    private final static String delete="delete from celular where idcelular=?";
    private final static String selectall="select *from celular";
    private final static String select="select from celular where idcelular=?";
    
    public celularDAO(){
        super();
    }
    public void create (celularDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(insert);
        ps.setInt(1, dto.getIdcelular());
        ps.setInt(2, dto.getIdnumEmpleado());
        ps.setInt(3, dto.getIdcliente());
        ps.setString(4, dto.getNombre());
        ps.setString(5, dto.getSisoperativo());
        ps.setString(6, dto.getMarca());
        ps.setString(7, dto.getMemoria());
        ps.setDouble(8, dto.getPrecio());
        ps.setString(9, dto.getCompañia());
        ps.setString(10, dto.getColor());
        ps.setInt(11, dto.getCantidadcamaras());
        ps.setInt(12, dto.getPulgadas());
        ps.setDate(13, dto.getFechaventa());
        ps.setString(14, dto.getPixeles());
        ps.executeUpdate();
        cerrar(ps);
        
    }
    public void actualiza (celularDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(update);
        ps.setInt(1, dto.getIdnumEmpleado());
        ps.setInt(2, dto.getIdcliente());
        ps.setString(3, dto.getNombre());
        ps.setString(4, dto.getSisoperativo());
        ps.setString(5, dto.getMarca());
        ps.setString(6, dto.getMemoria());
        ps.setDouble(7, dto.getPrecio());
        ps.setString(8, dto.getCompañia());
        ps.setString(9, dto.getColor());
        ps.setInt(10, dto.getCantidadcamaras());
        ps.setInt(11, dto.getPulgadas());
        ps.setDate(12, dto.getFechaventa());
        ps.setString(13, dto.getPixeles());
        ps.setInt(14, dto.getIdcelular());
        ps.executeUpdate();
        cerrar(ps);
    }
    public void borra(celularDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(delete);
        ps.setInt(1, dto.getIdcelular());
        ps.executeUpdate();
        cerrar(ps);
    }
    
    public celularDT seleccionar(celularDT dto)throws Exception{
        PreparedStatement ps =null;
        ResultSet rs = null;
        ps=conn.prepareStatement(select);
        ps.setString(1, dto.getNombre());
        rs = ps.executeQuery();
        if(rs.next())
        {
            dto.setIdcelular(rs.getInt("idcelular"));
            dto.setIdnumEmpleado(rs.getInt("idnumEmpleado"));
            dto.setIdcliente(rs.getInt("idcliente"));
            dto.setSisoperativo(rs.getString("sisoperativo"));
            dto.setMarca(rs.getString("marca"));
            dto.setMemoria(rs.getString("memoria"));
            dto.setPrecio(rs.getInt("precio"));
            dto.setCompañia(rs.getString("compañia"));
            dto.setColor(rs.getString("color"));
            dto.setCantidadcamaras(rs.getInt("cantidadcamaras"));
            dto.setPulgadas(rs.getInt("pulgadas"));
            dto.setFechaventa(rs.getDate("fechaVenta"));
            dto.setPixeles(rs.getString("pixeles"));
        } 
        else 
        {
            return null;
        }
        return dto;
     }
    
    public List selectall() throws Exception {
         List lista = new ArrayList();
         PreparedStatement ps = null;
         ResultSet rs = null;
         celularDT dto;
         ps = conn.prepareStatement(selectall);
         rs = ps.executeQuery();
         while (rs.next()){
             dto = new celularDT();
             dto.setIdcelular(rs.getInt("idcelular"));
             dto.setIdnumEmpleado(rs.getInt("idnumEmpleado"));
             dto.setIdcliente(rs.getInt("idcliente"));
             dto.setNombre(rs.getString("nombre"));
             dto.setSisoperativo(rs.getString("sisoperativo"));
             dto.setMarca(rs.getString("marca"));
             dto.setMemoria(rs.getString("memoria"));
             dto.setPrecio(rs.getInt("precio"));
             dto.setCompañia(rs.getString("compañia"));
             dto.setColor(rs.getString("color"));
             dto.setCantidadcamaras(rs.getInt("cantidadcamaras"));
             dto.setPulgadas(rs.getInt("pulgadas"));
             dto.setFechaventa(rs.getDate("fechaVenta"));
             dto.setPixeles(rs.getString("pixeles"));
             lista.add(dto);
         }
         return lista;
         
     }
    
}

////////////////////////////  clienteDAO  ///////////////////////

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PROYECTO.dao;

import PROYECTO.dt.clienteDT;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.sql.Connection;

/**
 *
 * @author jamon
 */
public class clienteDAO extends ConexionBD{
    private final static String insert="insert into cliente(idcliente, nombre, apaterno, amaterno, rfc, celular, fechanacimiento, correo, sexo)values(?,?,?,?,?,?,?,?,?)";
    private final static String update="update cliente set nombre=?, apaterno=?, amaterno=?, rfc=?, celular=?, fechanacimiento=?, correo=?, sexo=? where idcliente=?";
    private final static String delete="delete from cliente where idcliente=?";
    private final static String selectall="select * from cliente";
    private final static String select="select * from cliente where nombre=?";
    
    public clienteDAO() {
        super();
    }
    public void create(clienteDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(insert);
        ps.setInt(1, dto.getIdcliente());
        ps.setString(2, dto.getNombre());
        ps.setString(3, dto.getApaterno());
        ps.setString(4, dto.getAmaterno());
        ps.setString(5, dto.getRfc());
        ps.setInt(6, dto.getCelular());
        ps.setDate(7, dto.getFechanacimiento());
        ps.setString(8, dto.getCorreo());
        ps.setString(9, dto.getSexo());
        ps.executeUpdate();
        cerrar(ps);        
    }
    
    public void actualiza(clienteDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(update);
        ps.setString(1, dto.getNombre());
        ps.setString(2, dto.getApaterno());
        ps.setString(3, dto.getAmaterno());
        ps.setString(4, dto.getRfc());
        ps.setInt(5, dto.getCelular());
        ps.setDate(6, dto.getFechanacimiento());
        ps.setString(7, dto.getCorreo());
        ps.setString(8, dto.getSexo());
        ps.setInt(9, dto.getIdcliente());
        ps.executeUpdate();
        cerrar(ps);
    }
     public void borra(clienteDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(delete);
        ps.setInt(1, dto.getIdcliente());
        ps.executeUpdate();
        cerrar(ps);
     }
     
     public clienteDT select(clienteDT dto)throws Exception{
         PreparedStatement ps = null;
         ResultSet rs = null;
         ps=conn.prepareStatement(select);
         ps.setString(1, dto.getNombre());
         rs = ps.executeQuery();
         if (rs.next()){
             dto.setIdcliente(rs.getInt("idcliente"));
             dto.setApaterno(rs.getString("apaterno"));
             dto.setAmaterno(rs.getString("amaterno"));
             dto.setRfc(rs.getString("rfc"));
             dto.setCelular(rs.getInt("celular"));
             dto.setFechanacimiento(rs.getDate("fechanacimiento"));
             dto.setCorreo(rs.getString("correo"));
             dto.setSexo(rs.getString("sexo"));
         }
         else {
             return null;
         }
         return dto;
     }
     public List selectall() throws Exception {
         List lista = new ArrayList();
         PreparedStatement ps = null;
         ResultSet rs = null;
         clienteDT dto;
         ps = conn.prepareStatement(selectall);
         rs = ps.executeQuery();
         while (rs.next()){
             dto = new clienteDT();
             dto.setIdcliente(rs.getInt("idcliente"));
             dto.setNombre(rs.getString("nombre"));
             dto.setApaterno(rs.getString("apaterno"));
             dto.setAmaterno(rs.getString("amaterno"));
             dto.setRfc(rs.getString("rfc"));
             dto.setCelular(rs.getInt("celular"));
             dto.setFechanacimiento(rs.getDate("fechanacimiento"));
             dto.setCorreo(rs.getString("correo"));
             dto.setSexo(rs.getString("sexo"));
             lista.add(dto);
         }
         return lista;
         
     }
}

//////////////////////////  empleadoDAO  ///////////////////////

package PROYECTO.dao;
import PROYECTO.dao.ConexionBD;
import PROYECTO.dt.empleadoDT;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

public class empleadoDAO extends ConexionBD{
    private final static String insert="insert into empleado(idnumEmpleado,idtienda,nombre,cargo,celular,email,sexo)values(?,?,?,?,?,?,?)";
    private final static String update="update empleado set idtienda=?,nombre=?,cargo=?,celular=?,email=?,sexo=? where idnumEmpleado=?";
    private final static String delete="delete from empleado where idnumEmpleado=?";
    private final static String selectall="select *from empleado";
    private final static String select="select *from empleado where nombre=?";
     public empleadoDAO(){
        super();
    }
     public void create (empleadoDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(insert);
        
        ps.setInt(1, dto.getIdnumEmpleado());
        ps.setInt(2, dto.getIdtienda());
        ps.setString(3, dto.getNombre());
        ps.setString(4, dto.getCargo());
        ps.setInt(5, dto.getCelular());
        ps.setString(6, dto.getEmail());
        ps.setString(7, dto.getSexo());
        ps.executeUpdate();
        cerrar(ps);
    }
     public void actualiza (empleadoDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(update);
        ps.setInt(1, dto.getIdtienda());
        ps.setString(2, dto.getNombre());
        ps.setString(3, dto.getCargo());
        ps.setInt(4, dto.getCelular());
        ps.setString(5, dto.getEmail());
        ps.setString(6, dto.getSexo());
        ps.setInt(7, dto.getIdnumEmpleado());
        ps.executeUpdate();
        cerrar(ps);
    }
     public void borra(empleadoDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(delete);
        ps.setInt(1, dto.getIdnumEmpleado());
        ps.executeUpdate();
        cerrar(ps);
    }
     public empleadoDT seleccionar(empleadoDT dto)throws Exception{
        PreparedStatement ps =null;
        ResultSet rs = null;
        ps=conn.prepareStatement(select);
        ps.setString(1, dto.getNombre());
        rs = ps.executeQuery();
        if(rs.next())
        {
            dto.setIdnumEmpleado(rs.getInt("idnumEmpleado"));
            dto.setIdtienda(rs.getInt("idtienda"));
            dto.setNombre(rs.getString("nombre"));
            dto.setCargo(rs.getString("cargo"));
            dto.setCelular(rs.getInt("celular"));
            dto.setEmail(rs.getString("email"));
            dto.setSexo(rs.getString("sexo"));
        } 
        else 
        {
            return null;
        }
        return dto;
     }
     public List selectall()throws Exception{
            List lista= new ArrayList();
            PreparedStatement ps=null;
            ResultSet rs = null;
            empleadoDT dto;
            ps= conn.prepareStatement(selectall);
            rs = ps.executeQuery();
            while(rs.next())
            {
                dto=new empleadoDT();
                dto.setIdnumEmpleado(rs.getInt("idnumEmpleado"));
                dto.setIdtienda(rs.getInt("idtienda"));
                dto.setNombre(rs.getString("nombre"));
                dto.setCargo(rs.getString("cargo"));
                dto.setCelular(rs.getInt("celular"));
                dto.setEmail(rs.getString("email"));
                dto.setSexo(rs.getString("sexo"));
                lista.add(dto);
       
            }
            return lista;
            
            
        }
}

///////////////////////////  notaDAO  //////////////////////////

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package PROYECTO.dao;

import PROYECTO.dt.notaDT;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.sql.Connection;

/**
 *
 * @author jamon
 */
public class notaDAO extends ConexionBD{
     private final static String insert="insert into nota(idnota, idcelular, fechapago, detalleventa, cantidadproductos, preciototal)values(?,?,?,?,?,?)";
     private final static String update="update nota set idcelular=?, fechapago=?, detalleventa=?, cantidadproductos=?, preciototal=? where idpnota=?";
     private final static String delete="delete from nota where idnota=?";
     private final static String selectall="select * from nota";
     private final static String select="select * from nota where idnota=?";
    
    public notaDAO() {
        super();
    }
    public void create (notaDT dto)throws Exception{
        PreparedStatement ps =null;
        ps=conn.prepareStatement(insert);        
        ps.setInt(1, dto.getIdnota());
        ps.setInt(2, dto.getIdcelular());
        ps.setDate(3, dto.getFechapago());
        ps.setString(4, dto.getDetalleventa());
        ps.setInt(5, dto.getCantidadproductos());
        ps.setDouble(6, dto.getPreciototal());
        ps.executeUpdate();
        cerrar(ps);        
    }
    
    public void actualiza(notaDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(update);
        ps.setInt(1, dto.getIdcelular());
        ps.setDate(2, dto.getFechapago());
        ps.setString(3, dto.getDetalleventa());
        ps.setInt(4, dto.getCantidadproductos());
        ps.setDouble(5, dto.getPreciototal());
        ps.setInt(6, dto.getIdnota());
        ps.executeUpdate();
        cerrar(ps);
    }
     public void borra(notaDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(delete);
        ps.setInt(1, dto.getIdnota());
        ps.executeUpdate();
        cerrar(ps);
     }
     
     public notaDT select(notaDT dto)throws Exception{
         PreparedStatement ps = null;
         ResultSet rs = null;
         ps=conn.prepareStatement(select);
         ps.setInt(1, dto.getIdnota());
         rs = ps.executeQuery();
         if (rs.next()){
             dto.setIdcelular(rs.getInt("idcelular"));
             dto.setFechapago(rs.getDate("fechapago"));
             dto.setDetalleventa(rs.getString("detalleventa"));
             dto.setCantidadproductos(rs.getInt("cantidadproductos"));
             dto.setPreciototal(rs.getDouble("preciototal"));
         }
         else {
             return null;
         }
         return dto;
     }
     public List selectall() throws Exception {
         List lista = new ArrayList();
         PreparedStatement ps = null;
         ResultSet rs = null;
         notaDT dto;
         ps = conn.prepareStatement(selectall);
         rs = ps.executeQuery();
         while (rs.next()){
             dto = new notaDT();
             dto.setIdnota(rs.getInt("idnota"));
             dto.setIdcelular(rs.getInt("idcelular"));
             dto.setFechapago(rs.getDate("fechapago"));
             dto.setDetalleventa(rs.getString("detalleventa"));
             dto.setCantidadproductos(rs.getInt("cantidadproductos"));
             dto.setPreciototal(rs.getDouble("preciototal"));
             lista.add(dto);
         }
         return lista;
         
     }
}

/////////////////////////  tiendaDAO  //////////////////////////

package PROYECTO.dao;
import PROYECTO.dt.tiendaDT;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;


public class tiendaDAO extends ConexionBD{
     private final static String insert="insert into tienda(idtienda,nombre,telefono,pais,direccion,correo,horario,rfc)values(?,?,?,?,?,?,?,?)";
    private final static String update="update tienda set nombre=?,telefono=?,pais=?,direccion=?,correo=?,horario=?,rfc=? where idtienda=?";
    private final static String delete="delete from tienda where idtienda=?";
    private final static String selectall="select *from tienda";
    private final static String select="select *from tienda where nombre=?";
     public tiendaDAO(){
        super();
    }
      public void create (tiendaDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(insert);        
        ps.setInt(1, dto.getIdtienda());
        ps.setString(2, dto.getNombre());
        ps.setInt(3, dto.getTelefono());
        ps.setString(4, dto.getPais());
        ps.setString(5, dto.getDireccion());
        ps.setString(6, dto.getCorreo());
        ps.setString(7, dto.getHorario());
        ps.setString(8, dto.getRfc());
        ps.executeUpdate();
        cerrar(ps);
    }
      public void actualiza (tiendaDT dto)throws Exception{
        PreparedStatement ps=null;
        ps=conn.prepareStatement(update);
        ps.setString(1, dto.getNombre());
        ps.setInt(2, dto.getTelefono());
        ps.setString(3, dto.getPais());
        ps.setString(4, dto.getDireccion());
        ps.setString(5, dto.getCorreo());
        ps.setString(6, dto.getHorario());
        ps.setString(7, dto.getRfc());
        ps.setInt(8, dto.getIdtienda());
        ps.executeUpdate();
        cerrar(ps);
    }
      public void borra(tiendaDT dto)throws Exception{
        PreparedStatement ps =null;
        ps =conn.prepareStatement(delete);
        ps.setInt(1, dto.getIdtienda());
        ps.executeUpdate();
        cerrar(ps);
    }
    public tiendaDT seleccionar(tiendaDT dto)throws Exception{
        PreparedStatement ps =null;
        ResultSet rs = null;
        ps=conn.prepareStatement(select);
        ps.setString(1, dto.getNombre());
        rs = ps.executeQuery();
        if(rs.next())
        {
            dto.setIdtienda(rs.getInt("idtienda"));
            dto.setNombre(rs.getString("nombre"));
            dto.setTelefono(rs.getInt("telefono"));
            dto.setPais(rs.getString("pais"));
            dto.setDireccion(rs.getString("direccion"));
            dto.setCorreo(rs.getString("correo"));
            dto.setHorario(rs.getString("horario"));
            dto.setRfc(rs.getString("rfc"));
        } 
        else 
        {
            return null;
        }
        return dto;
     }
     public List selectall()throws Exception{
            List lista= new ArrayList();
            PreparedStatement ps=null;
            ResultSet rs = null;
            tiendaDT dto;
            ps= conn.prepareStatement(selectall);
            rs = ps.executeQuery();
            while(rs.next())
            {
                dto=new tiendaDT();
                dto.setIdtienda(rs.getInt("idtienda"));
                dto.setNombre(rs.getString("nombre"));
                dto.setTelefono(rs.getInt("telefono"));
                dto.setPais(rs.getString("pais"));
                dto.setDireccion(rs.getString("direccion"));
                dto.setCorreo(rs.getString("correo"));
                dto.setHorario(rs.getString("horario"));
                dto.setRfc(rs.getString("rfc"));
                lista.add(dto);
       
            }
            return lista;
            
            
        }
} 

////////////////// AQUÍ TERMINAN LOS DAO //////////////////